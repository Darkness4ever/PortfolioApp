{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App'\n// ReactDOM.render(<App />,document.getElementById('root'));\n\"use strict\";\n\nimport _classCallCheck from \"/Users/mahapata/Desktop/udemy-course/portfolioapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mahapata/Desktop/udemy-course/portfolioapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mahapata/Desktop/udemy-course/portfolioapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mahapata/Desktop/udemy-course/portfolioapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mahapata/Desktop/udemy-course/portfolioapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mahapata/Desktop/udemy-course/portfolioapp/src/index.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\n\nvar GridExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GridExample, _Component);\n\n  function GridExample(props) {\n    var _this;\n\n    _classCallCheck(this, GridExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridExample).call(this, props));\n\n    _this.onGridReady = function (params) {\n      _this.gridApi = params.api;\n      _this.gridColumnApi = params.columnApi;\n      var httpRequest = new XMLHttpRequest();\n\n      var updateData = function updateData(data) {\n        _this.setState({\n          rowData: data\n        });\n      };\n\n      httpRequest.open(\"GET\", \"https://raw.githubusercontent.com/ag-grid/ag-grid/master/packages/ag-grid-docs/src/olympicWinnersSmall.json\");\n      httpRequest.send();\n\n      httpRequest.onreadystatechange = function () {\n        if (httpRequest.readyState === 4 && httpRequest.status === 200) {\n          updateData(JSON.parse(httpRequest.responseText));\n        }\n      };\n    };\n\n    _this.state = {\n      columnDefs: [{\n        headerName: \"Athlete\",\n        field: \"athlete\"\n      }, {\n        headerName: \"Age\",\n        field: \"age\"\n      }, {\n        headerName: \"Country\",\n        field: \"country\"\n      }, {\n        headerName: \"Year\",\n        field: \"year\",\n        cellEditor: \"yearCellEditor\"\n      }, {\n        headerName: \"Date\",\n        field: \"date\"\n      }, {\n        headerName: \"Sport\",\n        field: \"sport\"\n      }, {\n        headerName: \"Gold\",\n        field: \"gold\"\n      }, {\n        headerName: \"Silver\",\n        field: \"silver\"\n      }, {\n        headerName: \"Bronze\",\n        field: \"bronze\"\n      }, {\n        headerName: \"Total\",\n        field: \"total\"\n      }],\n      defaultColDef: {\n        editable: true,\n        width: 100,\n        filter: true\n      },\n      components: {\n        yearCellEditor: getYearCellEditor()\n      },\n      rowData: null\n    };\n    return _this;\n  }\n\n  _createClass(GridExample, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"test-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"test-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Clicking outside the grid will stop the editing \", React.createElement(\"button\", {\n        style: {\n          fontSize: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Dummy Save\"), React.createElement(\"input\", {\n        placeholder: \"click here, editing stops\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"myGrid\",\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        className: \"ag-theme-balham\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(AgGridReact, {\n        columnDefs: this.state.columnDefs,\n        defaultColDef: this.state.defaultColDef,\n        components: this.state.components,\n        rowData: this.state.rowData,\n        stopEditingWhenGridLosesFocus: true,\n        onGridReady: this.onGridReady,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return GridExample;\n}(Component);\n\nfunction getYearCellEditor() {\n  function YearCellEditor() {}\n\n  YearCellEditor.prototype.getGui = function () {\n    return this.eGui;\n  };\n\n  YearCellEditor.prototype.getValue = function () {\n    return this.value;\n  };\n\n  YearCellEditor.prototype.isPopup = function () {\n    return true;\n  };\n\n  YearCellEditor.prototype.init = function (params) {\n    this.value = params.value;\n    var tempElement = document.createElement(\"div\");\n    tempElement.innerHTML = '<div class=\"yearSelect\">' + \"<div>Clicking here does not close the popup!</div>\" + '<button id=\"bt2006\" class=\"yearButton\">2006</button>' + '<button id=\"bt2008\" class=\"yearButton\">2008</button>' + '<button id=\"bt2010\" class=\"yearButton\">2010</button>' + '<button id=\"bt2012\" class=\"yearButton\">2012</button>' + \"<div>\" + '<input type=\"text\" style=\"width: 100%;\" placeholder=\"clicking on this text field does not close\"/>' + \"</div>\" + \"</div>\";\n    var that = this;\n    [2006, 2008, 2010, 2012].forEach(function (year) {\n      tempElement.querySelector(\"#bt\" + year).addEventListener(\"click\", function () {\n        that.value = year;\n        params.stopEditing();\n      });\n    });\n    this.eGui = tempElement.firstChild;\n  };\n\n  return YearCellEditor;\n}\n\nrender(React.createElement(GridExample, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/mahapata/Desktop/udemy-course/portfolioapp/src/index.js"],"names":["React","Component","render","AgGridReact","GridExample","props","onGridReady","params","gridApi","api","gridColumnApi","columnApi","httpRequest","XMLHttpRequest","updateData","data","setState","rowData","open","send","onreadystatechange","readyState","status","JSON","parse","responseText","state","columnDefs","headerName","field","cellEditor","defaultColDef","editable","width","filter","components","yearCellEditor","getYearCellEditor","height","fontSize","YearCellEditor","prototype","getGui","eGui","getValue","value","isPopup","init","tempElement","document","createElement","innerHTML","that","forEach","year","querySelector","addEventListener","stopEditing","firstChild"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App'\n\n\n// ReactDOM.render(<App />,document.getElementById('root'));\n\n\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\n\nclass GridExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnDefs: [\n        {\n          headerName: \"Athlete\",\n          field: \"athlete\"\n        },\n        {\n          headerName: \"Age\",\n          field: \"age\"\n        },\n        {\n          headerName: \"Country\",\n          field: \"country\"\n        },\n        {\n          headerName: \"Year\",\n          field: \"year\",\n          cellEditor: \"yearCellEditor\"\n        },\n        {\n          headerName: \"Date\",\n          field: \"date\"\n        },\n        {\n          headerName: \"Sport\",\n          field: \"sport\"\n        },\n        {\n          headerName: \"Gold\",\n          field: \"gold\"\n        },\n        {\n          headerName: \"Silver\",\n          field: \"silver\"\n        },\n        {\n          headerName: \"Bronze\",\n          field: \"bronze\"\n        },\n        {\n          headerName: \"Total\",\n          field: \"total\"\n        }\n      ],\n      defaultColDef: {\n        editable: true,\n        width: 100,\n        filter: true\n      },\n      components: { yearCellEditor: getYearCellEditor() },\n      rowData: null\n    };\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n\n    const httpRequest = new XMLHttpRequest();\n    const updateData = data => {\n      this.setState({ rowData: data });\n    };\n\n    httpRequest.open(\n      \"GET\",\n      \"https://raw.githubusercontent.com/ag-grid/ag-grid/master/packages/ag-grid-docs/src/olympicWinnersSmall.json\"\n    );\n    httpRequest.send();\n    httpRequest.onreadystatechange = () => {\n      if (httpRequest.readyState === 4 && httpRequest.status === 200) {\n        updateData(JSON.parse(httpRequest.responseText));\n      }\n    };\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <div class=\"test-container\">\n          <div class=\"test-header\">\n            Clicking outside the grid will stop the editing <button style={{ fontSize: \"12px\" }}>Dummy Save</button>\n            <input placeholder=\"click here, editing stops\" />\n          </div>\n          <div\n            id=\"myGrid\"\n            style={{\n              height: \"100%\",\n              width: \"100%\"\n            }}\n            className=\"ag-theme-balham\"\n          >\n            <AgGridReact\n              columnDefs={this.state.columnDefs}\n              defaultColDef={this.state.defaultColDef}\n              components={this.state.components}\n              rowData={this.state.rowData}\n              stopEditingWhenGridLosesFocus={true}\n              onGridReady={this.onGridReady}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction getYearCellEditor() {\n  function YearCellEditor() {}\n  YearCellEditor.prototype.getGui = function() {\n    return this.eGui;\n  };\n  YearCellEditor.prototype.getValue = function() {\n    return this.value;\n  };\n  YearCellEditor.prototype.isPopup = function() {\n    return true;\n  };\n  YearCellEditor.prototype.init = function(params) {\n    this.value = params.value;\n    var tempElement = document.createElement(\"div\");\n    tempElement.innerHTML =\n      '<div class=\"yearSelect\">' +\n      \"<div>Clicking here does not close the popup!</div>\" +\n      '<button id=\"bt2006\" class=\"yearButton\">2006</button>' +\n      '<button id=\"bt2008\" class=\"yearButton\">2008</button>' +\n      '<button id=\"bt2010\" class=\"yearButton\">2010</button>' +\n      '<button id=\"bt2012\" class=\"yearButton\">2012</button>' +\n      \"<div>\" +\n      '<input type=\"text\" style=\"width: 100%;\" placeholder=\"clicking on this text field does not close\"/>' +\n      \"</div>\" +\n      \"</div>\";\n    var that = this;\n    [2006, 2008, 2010, 2012].forEach(function(year) {\n      tempElement.querySelector(\"#bt\" + year).addEventListener(\"click\", function() {\n        that.value = year;\n        params.stopEditing();\n      });\n    });\n    this.eGui = tempElement.firstChild;\n  };\n  return YearCellEditor;\n}\n\nrender(<GridExample />, document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}